// <auto-generated />
using System;
using Internship_Task.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Internship_Task.Migrations
{
    [DbContext(typeof(InternshipTaskDbContext))]
    [Migration("20230312214416_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Internship_Task.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2002, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "videvgeorge@gmail.com",
                            FullName = "Georgi Nikolaev Videv",
                            ManagerId = 1,
                            MonthlySalary = 400.52m,
                            PhoneNumber = "+359884550043"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2002, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hdespinova@gmail.com",
                            FullName = "Hristina Angelova Despinova",
                            ManagerId = 1,
                            MonthlySalary = 432.52m,
                            PhoneNumber = "+35923102309"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2002, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "apavlov@gmail.com",
                            FullName = "Angel Pavlov Pavlov",
                            ManagerId = 2,
                            MonthlySalary = 931.52m,
                            PhoneNumber = "+359882321313"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(2002, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mcenova@gmail.com",
                            FullName = "Mila Hristova Cenova",
                            ManagerId = 2,
                            MonthlySalary = 410.52m,
                            PhoneNumber = "+35988485043"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(2002, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mdimitrova@gmail.com",
                            FullName = "Maria Dimitrova Dimitrova",
                            ManagerId = 2,
                            MonthlySalary = 231.52m,
                            PhoneNumber = "+359877643"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(2003, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mjekova@gmail.com",
                            FullName = "Magdalena Miroslavova Jekova",
                            ManagerId = 3,
                            MonthlySalary = 230.52m,
                            PhoneNumber = "+35988786743"
                        });
                });

            modelBuilder.Entity("Internship_Task.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Struma 13",
                            DateOfStart = new DateTime(2022, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "service",
                            Email = "adespinov@gmail.com",
                            FullName = "Angel Despinov",
                            MonthlySalary = 4023.52m,
                            PhoneNumber = "+359882563"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Struma 12",
                            DateOfStart = new DateTime(2022, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "service",
                            Email = "vdespinova@gmail.com",
                            FullName = "Vanina Despinova",
                            MonthlySalary = 3023.52m,
                            PhoneNumber = "+35988223563"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Petur Beron 13",
                            DateOfStart = new DateTime(2021, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "service",
                            Email = "tvideva@gmail.com",
                            FullName = "Tania Videva",
                            MonthlySalary = 4223.11m,
                            PhoneNumber = "+359886572563"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Petur Beron 6",
                            DateOfStart = new DateTime(2002, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "service",
                            Email = "nvidev@gmail.com",
                            FullName = "Nikolai Videv",
                            MonthlySalary = 5013.22m,
                            PhoneNumber = "+35988762563"
                        });
                });

            modelBuilder.Entity("Internship_Task.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssigneeId = 3,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 1"
                        },
                        new
                        {
                            Id = 2,
                            AssigneeId = 2,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 2"
                        },
                        new
                        {
                            Id = 3,
                            AssigneeId = 4,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 3"
                        },
                        new
                        {
                            Id = 4,
                            AssigneeId = 2,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 4"
                        },
                        new
                        {
                            Id = 5,
                            AssigneeId = 3,
                            Description = "something...",
                            DueDate = new DateTime(2023, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 5"
                        },
                        new
                        {
                            Id = 6,
                            AssigneeId = 2,
                            Description = "something...",
                            DueDate = new DateTime(2023, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 6"
                        },
                        new
                        {
                            Id = 7,
                            AssigneeId = 1,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 7"
                        },
                        new
                        {
                            Id = 8,
                            AssigneeId = 1,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 8"
                        },
                        new
                        {
                            Id = 9,
                            AssigneeId = 1,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 9"
                        },
                        new
                        {
                            Id = 10,
                            AssigneeId = 5,
                            Description = "something...",
                            DueDate = new DateTime(2023, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Task 10"
                        });
                });

            modelBuilder.Entity("Internship_Task.Entities.Employee", b =>
                {
                    b.HasOne("Internship_Task.Entities.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Internship_Task.Entities.Task", b =>
                {
                    b.HasOne("Internship_Task.Entities.Employee", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");
                });
#pragma warning restore 612, 618
        }
    }
}
